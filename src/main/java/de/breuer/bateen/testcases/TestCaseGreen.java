package de.breuer.bateen.testcases;

import de.breuer.bateen.controller.ConfigController;
import de.breuer.bateen.model.VehicleType;
import de.breuer.bateen.sensor.AklsSensor;
import de.breuer.bateen.sensor.DsrcSensor;
import de.breuer.bateen.sensor.IrCameraSensor;
import de.breuer.bateen.sensor.VehicleSensor;
import lombok.extern.slf4j.Slf4j;

import java.sql.Timestamp;
import java.time.Instant;
import java.util.List;
import java.util.UUID;

@Slf4j
public class TestCaseGreen implements TestCaseGenerator {

    @Override
    public void generateTestCase() {
        String sensorRecordId = String.valueOf(UUID.randomUUID());
        String recordTimeStamp = String.valueOf(Timestamp.from(Instant.now()));

        AklsSensor akls = new AklsSensor();
        akls.setSensorRecordId(sensorRecordId);
        akls.setAnprNumberPlate("BN BR 1234");
        akls.setAnprNumberPlateConfidence(96);
        akls.setAnprCountry("DE");
        akls.setAnprCountryConfidence(96);
        akls.setAnprPlatePicture("iVBORw0KGgoAAAANSUhEUgAAAQAAAAEACAIAAADTED8xAAADMElEQVR4nOzVwQnAIBQFQYXff81RUkQCOyDj1YOPnbXWPmeTRef+/3O/OyBjzh3CD95Bfqnhf4QtqobAAAAAElFTkSuQmCC");
        akls.setAnprOverviewPicture("iVBORw0KGgoAAAANSUhEUgAAAQAAAAEACAIAAADTED8xAAADMElEQVR4nOzVwQnAIBQFQYXff81RUkQCOyDj1YOPnbXWPmeTRef+/3O/OyBjzh3CD95Bfqnhf4QtqobAAAAAElFTkSuQmCC");
        akls.setAnprSideviewPicture("iVBORw0KGgoAAAANSUhEUgAAAQAAAAEACAIAAADTED8xAAADMElEQVR4nOzVwQnAIBQFQYXff81RUkQCOyDj1YOPnbXWPmeTRef+/3O/OyBjzh3CD95Bfqnhf4QtqobAAAAAElFTkSuQmCC");

        VehicleSensor vehicle = new VehicleSensor();
        vehicle.setSensorRecordId(sensorRecordId);
        vehicle.setVehicleWeightClass(500);
        vehicle.setVehicleType(VehicleType.LKW);
        vehicle.setVehicleHeight(230);
        vehicle.setVehicleWidth(200);
        vehicle.setVehicleLength(700);
        vehicle.setVehicleLengthConfidence(95);
        vehicle.setVehicleAxleCount(4);
        vehicle.setVehicleSpeed(80);
        vehicle.setDetails("NoDetails");
        vehicle.setUnNumber("9000");
        vehicle.setHasWasteSign(true);
        vehicle.setExtraWideVehicle(false);

        DsrcSensor dsrc = new DsrcSensor();
        dsrc.setSensorRecordId(sensorRecordId);
        dsrc.setRecordTimeStamp(recordTimeStamp);
        dsrc.setVehicleRegistrationPlate("D.BN BR 1234");
        dsrc.setSpeedingEvent(false);
        dsrc.setDrivingWithoutValidCard(false);
        dsrc.setDriverCard(true);
        dsrc.setCardInsertion(false);
        dsrc.setMotionDataError(false);
        dsrc.setVehicleMotionConflict(false);
        dsrc.setSecondDriverCard(false);
        dsrc.setCurrentActivityDriving(false);
        dsrc.setLastSessionClosed(false);
        dsrc.setPowerSupplyInterruption(false);
        dsrc.setSensorFault(0);
        dsrc.setTimeAdjustment(1234567L);
        dsrc.setLatestBreachAttempt(1234567L);
        dsrc.setLastCalibrationData(1732273177L);
        dsrc.setPrevCalibrationData(1732273177L);
        dsrc.setDateTachoConnected(1234567L);
        dsrc.setCurrentSpeed(80);
        dsrc.setTimeStamp(1234567L);
        dsrc.setLatestAuthenticatedPosition(-1L);
        dsrc.setContinuousDrivingTime(14L);
        dsrc.setDailyDrivingTimeShift(0L);
        dsrc.setDailyDrivingTimeWeek(0L);
        dsrc.setWeeklyDrivingTime(0L);
        dsrc.setFortnightlyDrivingTime(0L);

        IrCameraSensor ir = new IrCameraSensor();
        ir.setSensorRecordId(sensorRecordId);
        ir.setIrImages(List.of());
        ir.setIrMaxTempValues(List.of());
        ir.setIrMeanTempValues(List.of());

        ConfigController.setAklsSensor(akls);
        ConfigController.setVehicleSensor(vehicle);
        ConfigController.setDsrcSensor(dsrc);
        ConfigController.setIrCameraSensor(ir);
    }
}
